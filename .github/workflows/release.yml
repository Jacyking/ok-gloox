name: Release

on:
  push:
    tags:
      - v[0-9]+.*

jobs:
  build-and-artifact:
    
    name: ${{ matrix.os }} (${{ matrix.configuration }})
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        configuration: [ debug, release ]
        os: [ ubuntu-latest, windows-latest ]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Configure CMake
        run : |
          cmake -B${{ github.workspace }}/build_shared -DCMAKE_BUILD_TYPE=${{ matrix.configuration }} -DBUILD_SHARED_LIBS=ON
          cmake -B${{ github.workspace }}/build_static -DCMAKE_BUILD_TYPE=${{ matrix.configuration }} -DBUILD_SHARED_LIBS=OFF

      - name: Build
        run : |
          cmake --build ${{ github.workspace }}/build_static --config ${{ matrix.configuration }}
          cmake --build ${{ github.workspace }}/build_shared --config ${{ matrix.configuration }}

      - name: Pack on win
        if  : startsWith(${{ matrix.os }}, 'windows')
        run : |
          mkdir ${{ github.workspace }}/${{ matrix.configuration }}
          mv ${{ github.workspace }}/build_static/src/${{ matrix.configuration }}/gloox.lib ${{ github.workspace }}/${{ matrix.configuration }}
          mv ${{ github.workspace }}/build_shared/src/${{ matrix.configuration }}/gloox.dll ${{ github.workspace }}/${{ matrix.configuration }}

      - name: Pack on ubuntu
        if  : startsWith(${{ matrix.os }}, 'ubuntu')
        run : |
          mkdir ${{ github.workspace }}/${{ matrix.configuration }}
          mv ${{ github.workspace }}/build_static/src/libgloox.a ${{ github.workspace }}/${{ matrix.configuration }}
          mv ${{ github.workspace }}/build_shared/src/libgloox.so ${{ github.workspace }}/${{ matrix.configuration }}

      - name: Upload on win
        uses: actions/upload-artifact@v3
        if  : startsWith(${{ matrix.os }}, 'windows')
        with: 
          name: libgloox-win-x64
          path: |
            ${{ github.workspace }}/include
            ${{ github.workspace }}/${{ matrix.configuration }}/gloox.lib
            ${{ github.workspace }}/${{ matrix.configuration }}/gloox.dll

      - name: Upload on ubuntu
        uses: actions/upload-artifact@v3
        if  : startsWith(${{ matrix.os }}, 'ubuntu')
        with: 
          name: libgloox-linux-x64
          path: |
            ${{ github.workspace }}/include
            ${{ github.workspace }}/${{ matrix.configuration }}/libgloox.a
            ${{ github.workspace }}/${{ matrix.configuration }}/libgloox.so

  release:

    needs: build-and-artifact
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os  : [ ubuntu-latest, windows-latest ]
    
    steps:
      - name: Format
        id  : format
        run : echo "::set-output name=format::$(if [ startsWith(${{ matrix.os }}, 'windows') ]; then echo 'win'; else echo 'linux'; fi)"

      - name: Suffix
        id  : suffix
        run : echo "::set-output name=suffix::$(if [ startsWith(${{ matrix.os }}, 'windows') ]; then echo 'zip'; else echo 'tar'; fi)"

      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: libgloox-${{ steps.format.outputs.format }}-x64
          path: libgloox-${{ steps.format.outputs.format }}-x64

      - name: Test
        if  : startsWith(${{ matrix.os }}, 'ubuntu')
        run : ls
          
      - name: Create Release
        id  : create_release
        uses: actions/create-release@v1
        env :
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          draft: false
          prerelease: false
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
      
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env :
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_content_type: application/${{ steps.suffix.outputs.suffix }}
          asset_path: libgloox-${{ steps.format.outputs.format }}-x64.${{ steps.suffix.outputs.suffix }}
          asset_name: libgloox-${{ steps.format.outputs.format }}-x64.${{ steps.suffix.outputs.suffix }}
